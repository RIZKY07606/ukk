basePath: /
definitions:
  create.CreateUserRequest:
    description: Create user request body
    properties:
      email:
        description: Your Email
        type: string
      nama:
        description: Your Name
        type: string
      password:
        description: Your Password
        type: string
    type: object
  create.CreateUserResponse:
    properties:
      email:
        type: string
      nama:
        type: string
    type: object
  create.CreateUserResponseWrapper:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/create.CreateUserResponse'
      message:
        type: string
    type: object
  delete.MessageResponse:
    properties:
      message:
        type: string
    type: object
  getprofile.GetUserResponse:
    properties:
      email:
        type: string
      nama:
        type: string
    type: object
  login.AuthRequest:
    description: Login user request body
    properties:
      email:
        description: Your Email
        type: string
      password:
        description: Your Password
        type: string
    type: object
  login.AuthResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  ukk-smkn2_features_karyaukk_delete.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_karyaukk_update.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_karyaukk_update.Request:
    properties:
      deskripsi:
        type: string
      judul:
        type: string
      kategori_id:
        type: string
      link:
        type: string
      siswa_id:
        type: string
    type: object
  ukk-smkn2_features_karyaukk_update.Response:
    properties:
      deskripsi:
        type: string
      judul:
        type: string
      karya_id:
        type: string
      kategori_id:
        type: string
      link:
        type: string
      siswa_id:
        type: string
    type: object
  ukk-smkn2_features_kategorikarya_create.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_kategorikarya_create.Request:
    properties:
      nama:
        type: string
    type: object
  ukk-smkn2_features_kategorikarya_create.Response:
    properties:
      kategori_id:
        type: string
      nama:
        type: string
    type: object
  ukk-smkn2_features_kategorikarya_delete.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_kategorikarya_delete.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  ukk-smkn2_features_kategorikarya_getall.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_kategorikarya_getall.Response:
    properties:
      kategori_id:
        type: string
      nama:
        type: string
    type: object
  ukk-smkn2_features_kategorikarya_getbyid.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_kategorikarya_getbyid.Response:
    properties:
      kategori_id:
        type: string
      nama:
        type: string
    type: object
  ukk-smkn2_features_review_create.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_review_create.Request:
    properties:
      karya_id:
        type: string
      komentar:
        type: string
      rating:
        type: integer
      user_id:
        type: string
    type: object
  ukk-smkn2_features_review_create.Response:
    properties:
      karya_id:
        type: string
      komentar:
        type: string
      rating:
        type: integer
      review_id:
        type: string
      user_id:
        type: string
    type: object
  ukk-smkn2_features_review_delete.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_review_getall.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_review_getall.Response:
    properties:
      karya_id:
        type: string
      komentar:
        type: string
      rating:
        type: integer
      review_id:
        type: string
      user_id:
        type: string
    type: object
  ukk-smkn2_features_review_getbyid.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_review_getbyid.Response:
    properties:
      karya_id:
        type: string
      komentar:
        type: string
      rating:
        type: integer
      review_id:
        type: string
      user_id:
        type: string
    type: object
  ukk-smkn2_features_review_update.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_review_update.Request:
    properties:
      karya_id:
        type: string
      komentar:
        type: string
      rating:
        type: integer
      user_id:
        type: string
    type: object
  ukk-smkn2_features_review_update.Response:
    properties:
      karya_id:
        type: string
      komentar:
        type: string
      rating:
        type: integer
      review_id:
        type: string
      user_id:
        type: string
    type: object
  ukk-smkn2_features_role_create.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_role_create.Request:
    properties:
      nama:
        type: string
    type: object
  ukk-smkn2_features_role_create.Response:
    properties:
      id:
        type: string
      nama:
        type: string
    type: object
  ukk-smkn2_features_role_delete.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_role_delete.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  ukk-smkn2_features_role_getall.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_role_getall.Response:
    properties:
      id:
        type: string
      nama:
        type: string
    type: object
  ukk-smkn2_features_role_getbyid.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_role_getbyid.Response:
    properties:
      id:
        type: string
      nama:
        type: string
    type: object
  ukk-smkn2_features_role_update.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_role_update.Request:
    properties:
      nama:
        type: string
    type: object
  ukk-smkn2_features_role_update.Response:
    properties:
      id:
        type: string
      nama:
        type: string
    type: object
  ukk-smkn2_features_siswa_create.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_siswa_create.Request:
    properties:
      jurusan:
        type: string
      kelas:
        type: string
      nama:
        type: string
      nis:
        type: string
      user_id:
        type: string
    type: object
  ukk-smkn2_features_siswa_create.Response:
    properties:
      jurusan:
        type: string
      kelas:
        type: string
      nama:
        type: string
      nis:
        type: string
      siswa_id:
        type: string
      user_id:
        type: string
    type: object
  ukk-smkn2_features_siswa_delete.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_siswa_getall.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_siswa_getall.Response:
    properties:
      jurusan:
        type: string
      kelas:
        type: string
      nama:
        type: string
      nis:
        type: string
      siswa_id:
        type: string
      user_id:
        type: string
    type: object
  ukk-smkn2_features_siswa_getbyid.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_siswa_getbyid.Response:
    properties:
      jurusan:
        type: string
      kelas:
        type: string
      nama:
        type: string
      nis:
        type: string
      siswa_id:
        type: string
      user_id:
        type: string
    type: object
  ukk-smkn2_features_siswa_update.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  ukk-smkn2_features_siswa_update.Request:
    properties:
      jurusan:
        type: string
      kelas:
        type: string
      nama:
        type: string
      nis:
        type: string
      user_id:
        type: string
    type: object
  ukk-smkn2_features_siswa_update.Response:
    properties:
      jurusan:
        type: string
      kelas:
        type: string
      nama:
        type: string
      nis:
        type: string
      siswa_id:
        type: string
      user_id:
        type: string
    type: object
host: 127.0.0.1:8080
info:
  contact: {}
  description: Restful API using go fiber
  title: your own API application
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Log In
      parameters:
      - description: Create user request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/login.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/login.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      tags:
      - auth
  /api/user/profile:
    get:
      description: Get Logged user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/getprofile.GetUserResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      tags:
      - user
  /api/user/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: Create user request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/create.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/create.CreateUserResponseWrapper'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      tags:
      - user
  /karyaukk/{id}:
    delete:
      description: Menghapus karya UKK berdasarkan ID yang diberikan
      parameters:
      - description: KaryaUKK ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delete.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ukk-smkn2_features_karyaukk_delete.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ukk-smkn2_features_karyaukk_delete.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ukk-smkn2_features_karyaukk_delete.ErrorResponse'
      summary: Delete a KaryaUKK by ID
      tags:
      - KaryaUKK
    put:
      consumes:
      - application/json
      description: Mengupdate karya UKK berdasarkan ID yang diberikan
      parameters:
      - description: KaryaUKK ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Data karya UKK yang akan diupdate
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/ukk-smkn2_features_karyaukk_update.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ukk-smkn2_features_karyaukk_update.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ukk-smkn2_features_karyaukk_update.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ukk-smkn2_features_karyaukk_update.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ukk-smkn2_features_karyaukk_update.ErrorResponse'
      summary: Update a KaryaUKK by ID
      tags:
      - KaryaUKK
  /kategori-karya:
    get:
      description: Mengembalikan list semua kategori karya
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ukk-smkn2_features_kategorikarya_getall.Response'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ukk-smkn2_features_kategorikarya_getall.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Ambil semua kategori karya
      tags:
      - kategori_karya
    post:
      consumes:
      - application/json
      description: Endpoint untuk membuat kategori karya baru
      parameters:
      - description: Data kategori karya
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ukk-smkn2_features_kategorikarya_create.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ukk-smkn2_features_kategorikarya_create.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ukk-smkn2_features_kategorikarya_create.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ukk-smkn2_features_kategorikarya_create.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Buat Kategori Karya
      tags:
      - kategori_karya
  /kategori-karya/{id}:
    delete:
      description: Hapus satu kategori karya berdasarkan ID
      parameters:
      - description: ID Kategori Karya
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ukk-smkn2_features_kategorikarya_delete.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ukk-smkn2_features_kategorikarya_delete.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ukk-smkn2_features_kategorikarya_delete.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ukk-smkn2_features_kategorikarya_delete.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Hapus Kategori Karya
      tags:
      - kategori_karya
    get:
      description: Mengembalikan detail kategori karya berdasarkan UUID
      parameters:
      - description: Kategori ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ukk-smkn2_features_kategorikarya_getbyid.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ukk-smkn2_features_kategorikarya_getbyid.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ukk-smkn2_features_kategorikarya_getbyid.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Ambil kategori karya berdasarkan ID
      tags:
      - kategori_karya
  /review:
    get:
      description: Mengambil semua review yang ada di database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ukk-smkn2_features_review_getall.Response'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ukk-smkn2_features_review_getall.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Ambil Semua Review
      tags:
      - review
    post:
      consumes:
      - application/json
      description: Membuat data review untuk karya tertentu
      parameters:
      - description: Request body review
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ukk-smkn2_features_review_create.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ukk-smkn2_features_review_create.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ukk-smkn2_features_review_create.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ukk-smkn2_features_review_create.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Buat review baru
      tags:
      - review
  /review/{id}:
    delete:
      description: Hapus review berdasarkan ID
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ukk-smkn2_features_review_delete.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ukk-smkn2_features_review_delete.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ukk-smkn2_features_review_delete.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Hapus Review
      tags:
      - review
    get:
      description: Mengambil satu data review berdasarkan ID
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ukk-smkn2_features_review_getbyid.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ukk-smkn2_features_review_getbyid.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ukk-smkn2_features_review_getbyid.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Ambil Review by ID
      tags:
      - review
    put:
      consumes:
      - application/json
      description: Mengupdate data review berdasarkan ID
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: string
      - description: Data review yang akan diupdate
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ukk-smkn2_features_review_update.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ukk-smkn2_features_review_update.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ukk-smkn2_features_review_update.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ukk-smkn2_features_review_update.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ukk-smkn2_features_review_update.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update Review by ID
      tags:
      - review
  /role:
    get:
      description: Get list of all roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ukk-smkn2_features_role_getall.Response'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ukk-smkn2_features_role_getall.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get All Roles
      tags:
      - role
    post:
      consumes:
      - application/json
      description: Create a new role
      parameters:
      - description: Role create request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/ukk-smkn2_features_siswa_create.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ukk-smkn2_features_siswa_create.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ukk-smkn2_features_siswa_create.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ukk-smkn2_features_siswa_create.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create Role
      tags:
      - role
  /role/{id}:
    delete:
      description: Delete a role by ID
      parameters:
      - description: Role ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ukk-smkn2_features_role_delete.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ukk-smkn2_features_role_delete.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ukk-smkn2_features_role_delete.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ukk-smkn2_features_role_delete.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete Role
      tags:
      - role
    get:
      description: Get single role by ID
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ukk-smkn2_features_role_getbyid.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ukk-smkn2_features_role_getbyid.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ukk-smkn2_features_role_getbyid.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Role by ID
      tags:
      - role
  /siswa:
    get:
      description: Mengambil semua data siswa
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ukk-smkn2_features_siswa_getall.Response'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ukk-smkn2_features_siswa_getall.ErrorResponse'
      summary: Get All Siswa
      tags:
      - siswa
  /siswa/{id}:
    delete:
      description: Menghapus data siswa berdasarkan ID
      parameters:
      - description: Siswa ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delete.MessageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ukk-smkn2_features_siswa_delete.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ukk-smkn2_features_siswa_delete.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ukk-smkn2_features_siswa_delete.ErrorResponse'
      summary: Delete Siswa
      tags:
      - siswa
    get:
      description: Mengambil data siswa berdasarkan ID
      parameters:
      - description: Siswa ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ukk-smkn2_features_siswa_getbyid.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ukk-smkn2_features_siswa_getbyid.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ukk-smkn2_features_siswa_getbyid.ErrorResponse'
      summary: Get Siswa by ID
      tags:
      - siswa
    put:
      consumes:
      - application/json
      description: Memperbarui data siswa dengan ID tertentu
      parameters:
      - description: Siswa ID
        in: path
        name: id
        required: true
        type: string
      - description: Request body data siswa
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/ukk-smkn2_features_siswa_update.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ukk-smkn2_features_siswa_update.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/ukk-smkn2_features_siswa_update.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/ukk-smkn2_features_siswa_update.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ukk-smkn2_features_siswa_update.ErrorResponse'
      summary: Update Siswa by ID
      tags:
      - siswa
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
